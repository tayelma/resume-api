name: Deploy Lambda Function

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  S3_BUCKET_NAME: resume-api-lambda
  LAMBDA: resume-function

jobs:

  package:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{steps.version.outputs.version}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Version
        id: version
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-release${increment}"
          bump_each_commit: false
          bump_each_commit_patch_pattern: ""
          search_commit_body: true
          user_format_type: "csv"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Zip Lambda code
        run: |
          zip -r ${{ env.LAMBDA }}${{ steps.version.output.version }}.zip api/resume-lambda-code.py

      - name: Upload Lambda code to S3
        run: |
          aws s3 cp ${{ env.LAMBDA }}${{ steps.version.output.version }}.zip s3://${{ env.S3_BUCKET_NAME }}/${{ env.LAMBDA }}${{ steps.version.output.version }}.zip
        

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [package]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Lambda function code
        run: |
          aws lambda update-function-code --function-name ${{ env.LAMBDA }}${{ steps.version.output.version }} --s3-bucket ${{ env.S3_BUCKET_NAME }} --s3-key ${{ env.LAMBDA }}.${{ needs.package.output.version }}.zip
